---
- hosts: all
  become: true

  vars:
    system:
      hostname: "services.home.chiasson.org"
      timezone: "Etc/UTC"
      ip: 192.168.50.3
    network:
      gateway: 192.168.50.1
      dns: 192.168.50.2

  handlers:

    - name: "Restart cockpit Socket"
      ansible.builtin.service:
        name: "cockpit.socket"
        state: "restarted"
      become: true
      tags:
        - "cockpit"
        - "kvm"

    - name: "Reboot system"
      ansible.builtin.reboot:
        reboot_timeout: 3600
      become: true
      tags:
        - "network"

  tasks:

    - name: "setup hostname and timezone"
      cervoevo.homelab.base: 
        hostname: "{{ system.hostname }}"
        timezone: "{{ system.timezone }}"

  # Chrony
    - name: "Manage chrony Packages"
      ansible.builtin.package:
        name: "chrony"
        state: "present"
      become: true

    - name: "Manage chrony Services"
      ansible.builtin.service:
        name: "chronyd.service"
        state: "started"
        enabled: true
      become: true

  # Add CLI packages
    - name: "Manage cli Packages"
      ansible.builtin.package:
        name:
          - "bash"
          - "bash-completion"
          - "tmux"
          - "wget"
          - "curl"
          - "bind9-next-utils"
          - "lsof"
          - "unzip"
        state: "present"
      become: true

    - name: "Manage tuned Packages"
      ansible.builtin.package:
        name: "tuned"
        state: "present"
      become: true
      
    - name: "Manage tuned Service"
      ansible.builtin.service:
        name: "tuned.service"
        state: "started"
        enabled: true
      become: true

    - name: "Manage avahi Packages"
      ansible.builtin.package:
        name:
          - "avahi"
          - "nss-mdns"
        state: "present"
      become: true

    - name: "Manage avahi Services"
      ansible.builtin.service:
        name: "avahi-daemon.service"
        state: "started"
        enabled: true
      become: true

    - name: "Manage avahi Firewall Policy"
      ansible.posix.firewalld:
        service: "mdns"
        state: "enabled"
        permanent: true
        immediate: true
      become: true

  # Manage Cockpit 
    - name: "Manage cockpit Packages"
      ansible.builtin.package:
        name:
          - "cockpit"
          - "cockpit-selinux"
          - "cockpit-sosreport"
        state: "present"
      become: true

    - name: "Manage cockpit Services"
      ansible.builtin.service:
        name: "cockpit.socket"
        state: "started"
        enabled: true
      become: true

    - name: "Manage cockpit Firewall Policy"
      ansible.posix.firewalld:
        service: "cockpit"
        state: "enabled"
        immediate: true
        permanent: true
      become: true

  # Manage performance cockpit
    - name: "Manage pcp Packages"
      ansible.builtin.package:
        name:
          - "pcp"
          - "cockpit-pcp"
        state: "present"
      become: true

    - name: "Manage pcp Services"
      ansible.builtin.service:
        name: "{{ item }}"
        state: "started"
      become: true
      loop:
        - "pmcd.service"
        - "pmlogger.service"

   # Virtualization
 
    - name: "Manage Virtualization Packages"
      ansible.builtin.package:
        name:
          - "libvirt"
          - "libvirt-client"
          - "libvirt-daemon-config-network"
          - "qemu-kvm"
          - "genisoimage"
        state: "present"
      become: true
      tags:
        - "kvm"

    - name: "Manage Virtualization Services"
      ansible.builtin.service:
        name: "{{ item }}"
        state: "started"
        enabled: true
      become: true
      loop:
        - "virtqemud.service"
        - "virtnetworkd.service"
      tags:
        - "kvm"

    - name: "Manage cockpit Machines Packages"
      ansible.builtin.package:
        name: "cockpit-machines"
        state: "present"
      become: true
      notify:
      - "Restart cockpit Socket"
      tags:
        - "cockpit"
        - "kvm"

    - name: "Manage network Packages"
      ansible.builtin.package:
        name:
          - "bridge-utils"
          - "python-lxml"
        state: "present"
      become: true
      tags:
        - "kvm"
        - "network"

    - name: "Manage physical bridge Device"
      community.general.nmcli:
        type: "bridge"
        conn_name: "phybr0"
        ifname: "phybr0"
        stp: true
        state: present
      become: true
      notify:
      - "Reboot system"
      tags:
        - "network"

    - name: "Manage physical bridge Member"
      community.general.nmcli:
        conn_name: "enp0s25"
        ifname: "enp0s25"
        type: "ethernet"
        slave_type: "bridge"
        master: "phybr0"
        state: "present"
      become: true
      notify:
      - "Reboot system"
      tags:
        - "network"

